from netCDF4 import Dataset
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.basemap import Basemap, cm


data_JSBACH = Dataset('../../model_data/JSBACH_SF1_fFirepft.nc', 
                'r', format = 'NETCDF4')
grid_data_JSBACH = Dataset('../../model_data/JSBACH_grid.nc', 
                    'r', format = 'NETCDF4')
                    
data_Inferno = Dataset('../../model_data/Inferno_S1_fFirepft.nc4', 
                'r', format = 'NETCDF4')
grid_data_Inferno = Dataset('../../model_data/JSBACH_grid.nc', 
                    'r', format = 'NETCDF4')

data_CTEM = Dataset('../../model_data/CTEM_S1_fFirepft.nc', 
                'r', format = 'NETCDF4')
grid_data_CTEM = Dataset('../../model_data/CTEM_t63_landmask.nc', 
                    'r', format = 'NETCDF4')
                    
data_CLM = Dataset('../../model_data/CLM_S1_fFirepft.nc', 
                'r', format = 'NETCDF4')
grid_data_CLM = Dataset('../../model_data/CLM-gridcell.nc', 
                    'r', format = 'NETCDF4')

data_MC2 = Dataset('../../model_data/MC2_GlobalFire_fFirepft.nc', 
                'r', format = 'NETCDF4')
grid_data_MC2 = Dataset('../../model_data/JSBACH_grid.nc', 
                    'r', format = 'NETCDF4')

data_LPJ_SPITFIRE = Dataset('../../model_data/LPJ-GUESS-SPITFIRE_SF1_fFirepft.nc', 
                'r', format = 'NETCDF4')
grid_data_LPJ_SPITFIRE = Dataset('../../model_data/JSBACH_grid.nc', 
                    'r', format = 'NETCDF4')

data_LPJ_Globfirm = Dataset('../../model_data/LPJ-GUESS-globfirm_SF1_fFirepft.nc', 
                'r', format = 'NETCDF4')
grid_data_LPJ_Globfirm = Dataset('../../model_data/JSBACH_grid.nc', 
                    'r', format = 'NETCDF4')

data_LPJ_BLAZE = Dataset('../../model_data/LPJ-GUESS-BLAZE_SF1_Cfire.nc', 
                'r', format = 'NETCDF4')
grid_data_LPJ_BLAZE = Dataset('../../model_data/JSBACH_grid.nc', 
                    'r', format = 'NETCDF4')

    
def get_global_emissions_monthly(time, data, grid_data):
    emis_rate_data = np.prod([data["fFirepft"][time], grid_data["area"]], axis = 0)
    emis_rate = np.sum(emis_rate_data)
    days = data["time"][time+1] - data["time"][time]
    emissions = emis_rate*days*86400
    return emissions
    
    
def get_global_emissions_yearly(year, data, grid_data):
    time = year*12
    days_per_month = []
    for i in range(12):
        days_per_month.append(data["time"][time + i + 1] - data["time"][time + i]) 
    sec_per_month = np.multiply(days_per_month,86400)
    emis_rate_data = np.prod([data["fFirepft"][time:time+12], grid_data["area"]], axis = 0)
    emis_per_month = np.multiply(emis_rate_data, 
                sec_per_month[:, np.newaxis, np.newaxis, np.newaxis])
    emissions = np.sum(emis_per_month)
    return emissions

def get_grid_emissions(year_start, period, data, grid_data):
    time = year_start*12
    days_per_month = []
    for i in range(period):
        days_per_month.append(data["time"][time+i+1]-data["time"][time+i])
    sec_per_month = np.multiply(days_per_month, 86400)
    emis_rate_data = np.prod([data["fFirepft"][time:time+period], grid_data["area"]], axis = 0)
    emis_per_month = np.multiply(emis_rate_data, 
                sec_per_month[:, np.newaxis, np.newaxis, np.newaxis])
    emissions_pft = np.sum(emis_per_month, axis = 0)
    emissions = np.sum(emissions_pft, axis = 0)
    return emissions
   
    
def plot_global_emissions_monthly(data, grid_data, no_months=0):
    x_data = range(len(data["time"])-1)
    y_data = []
    for x in x_data[-no_months:]:
        print("%.2f" % ((x-x_data[-no_months])/
                float(len(x_data[-no_months:]))))
        y_data.append(get_global_emissions_monthly(x, data, grid_data)/(10**12))
    plt.plot(x_data[-no_months:], y_data, color='r', linewidth=2.0,
               label='JSBACH Results')
    plt.ylabel('Carbon Emitted ($Pg/month$)')
    plt.xlabel('Month')
    plt.legend()
    plt.show()
    print "success"
   

def plot_global_emissions_yearly(data, grid_data, no_years=0):
    years = int(len(data["time"])/12)
    x_data = range(years-1)
    x_data_plot = [x+1700 for x in x_data]
    y_data = []
    for x in x_data[-no_years:]:
        print("%.2f" % ((x-x_data[-no_years])/
                float(len(x_data[-no_years:]))))
        y_data.append(get_global_emissions_yearly(x, data, grid_data)/(10**12))
    plt.plot(x_data_plot[-no_years:], y_data, color='r', linewidth=2.0,
               label='JSBACH Results')
    plt.ylabel('Carbon Emitted ($Pg/year$)')
    plt.xlabel('Year')
    plt.legend()
    plt.show()
    print "success"

def plot_map_period(year_start, period, data, grid_data):
    map_data = get_grid_emissions(year_start,period,data,grid_data)
    lats = data["latitude"]
    lons = data["longitude"]
    emis_data = map_data
    lons, lats = np.meshgrid(lons, lats)

    fig=plt.figure()
    m = Basemap(llcrnrlon=-180,llcrnrlat=-60, urcrnrlon=180,urcrnrlat=80,projection='mill')
    m.drawcoastlines()
    m.drawparallels(np.arange(-90.,91.,30.))
    m.drawmeridians(np.arange(-180.,181.,60.))
    m.drawmapboundary(fill_color='aqua')
    cs = m.contourf(lons,lats, emis_data, 100, cmap=plt.cm.YlOrRd, latlon=True)
    plt.title("Emission Rates, JSBACH")
    plt.show()
        
    

#print data_CLM["fFirepft"]
#print data_JSBACH
#print data_CTEM["fFirepft"]
#print grid_data_CTEM["landmask"]
#print grid_data_JSBACH["area"]
#print data_Inferno["fFirepft"]
#print data_MC2["fFirepft"]
#print data_LPJ_BLAZE["Cfire.monthly"]
#print data_LPJ_Globfirm["fFirepft"]
#print data_LPJ_SPITFIRE["fFirepft"]

plot_map_period(0,200,data_JSBACH,grid_data_JSBACH)
#print get_grid_emissions(0,12,data_JSBACH,grid_data_JSBACH)
       
#print get_global_emissions_monthly(0)*12
#plot_global_emissions_monthly(data_JSBACH, grid_data_JSBACH, 100)
#plot_global_emissions_yearly(data_JSBACH, grid_data_JSBACH,40)
#print get_global_emissions_yearly(132)
