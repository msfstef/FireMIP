from netCDF4 import Dataset
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.basemap import Basemap, cm
                    
emis_MC2 = Dataset('../../model_data/MC2_GlobalFire_fFirepft.nc', 
                'r', format = 'NETCDF4')
BA_MC2 = Dataset('../../model_data/MC2_GlobalFire_burntArea.nc', 
                'r', format = 'NETCDF4')                
grid_MC2 = Dataset('../../model_data/HalfDegree-gridarea.nc', 
                    'r', format = 'NETCDF4')
landCover_MC2 = Dataset('../../model_data/MC2_GlobalFire_BA.nc',
                    'r', format = 'NETCDF4')


#
# Carbon Emissions Analysis
#
                   
def get_grid_emissions(year_start, year_period, emis_data, grid_data):
    # Using 1 year equal to 365.25 days.
    sec_per_year = 31557600.
    
    # Ignore overflow warning.
    np.seterr(over='ignore')
       
    complete_area_data = grid_data["cell_area"]
    #complete_area_data = np.multiply(landCover_data["landCoverFrac"][year_start:int(year_start+month_period/12.)], grid_data["cell_area"])
    emis_rate_data = np.multiply(emis_data["fFirepft"][year_start:year_start+year_period], complete_area_data)
    emis_per_year = np.multiply(emis_rate_data, sec_per_year)
    emissions_pft = np.sum(emis_per_year, axis = 0)
    emissions = np.sum(emissions_pft, axis = 0)
    return emissions

def get_global_emissions_yearly(year, emis_data, grid_data):
    emissions_grid = get_grid_emissions(year, 1, emis_data, grid_data)
    emissions = np.sum(emissions_grid)
    return emissions


def plot_global_emissions_yearly(no_years, emis_data, grid_data):
    years = len(emis_data["year"])
    x_data = range(years)
    x_data_plot = [x+1901 for x in x_data]
    y_data = []
    for x in x_data[-no_years:]:
        print("%.2f" % ((x-x_data[-no_years])/
                float(len(x_data[-no_years:]))))
        y_data.append(get_global_emissions_yearly(x, emis_data, grid_data)/(10**12))
    plt.plot(x_data_plot[-no_years:], y_data, color='r', linewidth=2.0,
               label='MC2 Results')
    plt.ylabel('Carbon Emitted ($Pg/year$)')
    plt.xlabel('Year')
    plt.legend()
    plt.show()

def plot_map_period(year_start, year_period, emis_data, grid_data):
    map_data = get_grid_emissions(year_start,year_period, emis_data, grid_data)
    # Convert to billions of kg.
    map_data = np.multiply(map_data, (1./(10**9)))
    
    lats = grid_data["lat"]
    lons = grid_data["lon"]
    emis_data = map_data
    lons, lats = np.meshgrid(lons, lats)

    fig=plt.figure()
    m = Basemap(llcrnrlon=-180,llcrnrlat=-60, urcrnrlon=180,urcrnrlat=80,projection='mill')
    m.drawcoastlines()
    m.drawparallels(np.arange(-90.,91.,30.))
    m.drawmeridians(np.arange(-180.,181.,60.))
    m.drawmapboundary(fill_color='aqua')
    cs = m.contourf(lons,lats, emis_data, 10, cmap=plt.cm.YlOrRd, latlon=True)
    cb = m.colorbar(cs, "bottom", size="5%", pad="2%")
    cb.set_label("Billions of kg of Carbon")
    plt.title("Total Emissions, MC2")
    plt.show()
    
#plot_map_period(100,2,emis_MC2, grid_MC2)    
#plot_global_emissions_yearly(20, emis_MC2, grid_MC2)
print get_global_emissions_yearly(100, emis_MC2, grid_MC2)

